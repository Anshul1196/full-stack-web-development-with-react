{"ast":null,"code":"import * as ActionTypes from './actionTypes';\nimport { DISHES } from '../shared/dishes';\nimport { actionTypes } from 'react-redux-form';\nimport { baseURL } from '../shared/baseURL';\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }\n});\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  return fetch(baseURL + 'dishes').then(response => response.json()).then(dishes => dispatch(addDishes(dishes)));\n};\nexport const dishesLoading = () => dispatch => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseURL + 'comments').then(response => response.json()).then(comments => dispatch(addComments(comments)));\n};\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading(true));\n  return fetch(baseURL + 'promos').then(response => response.json()).then(promos => dispatch(addPromos(promos)));\n};\nexport const promosLoading = () => dispatch => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});","map":{"version":3,"sources":["/Users/ps44889/Desktop/react-tutorial/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","DISHES","actionTypes","baseURL","addComment","dishId","rating","author","comment","type","ADD_COMMENT","payload","fetchDishes","dispatch","dishesLoading","fetch","then","response","json","dishes","addDishes","DISHES_LOADING","dishesFailed","errmess","DISHES_FAILED","commentsFailed","COMMENTS_FAILED","ADD_DISHES","addComments","comments","ADD_COMMENTS","fetchComments","fetchPromos","promosLoading","promos","addPromos","PROMOS_LOADING","promosFailed","PROMOS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AACA,OAAO,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,MAAsC;AAC5DC,EAAAA,IAAI,EAAET,WAAW,CAACU,WAD0C;AAE5DC,EAAAA,OAAO,EAAE;AACLN,IAAAA,MAAM,EAAEA,MADH;AAELC,IAAAA,MAAM,EAAEA,MAFH;AAGLC,IAAAA,MAAM,EAAEA,MAHH;AAILC,IAAAA,OAAO,EAAEA;AAJJ;AAFmD,CAAtC,CAAnB;AAUP,OAAO,MAAMI,WAAW,GAAG,MAAOC,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAACC,aAAa,CAAC,IAAD,CAAd,CAAR;AAEA,SAAOC,KAAK,CAAEZ,OAAO,GAAG,QAAZ,CAAL,CACFa,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,EAEFF,IAFE,CAEIG,MAAM,IAAIN,QAAQ,CAACO,SAAS,CAACD,MAAD,CAAV,CAFtB,CAAP;AAGH,CANM;AAQP,OAAO,MAAML,aAAa,GAAG,MAAQD,QAAD,KAAe;AAC/CJ,EAAAA,IAAI,EAAET,WAAW,CAACqB;AAD6B,CAAf,CAA7B;AAIP,OAAO,MAAMC,YAAY,GAAIC,OAAD,KAAc;AACtCd,EAAAA,IAAI,EAAET,WAAW,CAACwB,aADoB;AAEtCb,EAAAA,OAAO,EAAEY;AAF6B,CAAd,CAArB;AAIP,OAAO,MAAME,cAAc,GAAIF,OAAD,KAAc;AACxCd,EAAAA,IAAI,EAAET,WAAW,CAAC0B,eADsB;AAExCf,EAAAA,OAAO,EAAEY;AAF+B,CAAd,CAAvB;AAIP,OAAO,MAAMH,SAAS,GAAID,MAAD,KAAa;AAClCV,EAAAA,IAAI,EAAET,WAAW,CAAC2B,UADgB;AAElChB,EAAAA,OAAO,EAAEQ;AAFyB,CAAb,CAAlB;AAIP,OAAO,MAAMS,WAAW,GAAIC,QAAD,KAAe;AACtCpB,EAAAA,IAAI,EAAET,WAAW,CAAC8B,YADoB;AAEtCnB,EAAAA,OAAO,EAAEkB;AAF6B,CAAf,CAApB;AAIP,OAAO,MAAME,aAAa,GAAG,MAAOlB,QAAD,IAAc;AAC7C,SAAOE,KAAK,CAAEZ,OAAO,GAAG,UAAZ,CAAL,CACFa,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,EAEFF,IAFE,CAEIa,QAAQ,IAAIhB,QAAQ,CAACe,WAAW,CAACC,QAAD,CAAZ,CAFxB,CAAP;AAGH,CAJM;AAMP,OAAO,MAAMG,WAAW,GAAG,MAAOnB,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAACoB,aAAa,CAAC,IAAD,CAAd,CAAR;AAEA,SAAOlB,KAAK,CAAEZ,OAAO,GAAG,QAAZ,CAAL,CACFa,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,EAEFF,IAFE,CAEIkB,MAAM,IAAIrB,QAAQ,CAACsB,SAAS,CAACD,MAAD,CAAV,CAFtB,CAAP;AAGH,CANM;AAQP,OAAO,MAAMD,aAAa,GAAG,MAAQpB,QAAD,KAAe;AAC/CJ,EAAAA,IAAI,EAAET,WAAW,CAACoC;AAD6B,CAAf,CAA7B;AAIP,OAAO,MAAMC,YAAY,GAAId,OAAD,KAAc;AACtCd,EAAAA,IAAI,EAAET,WAAW,CAACsC,aADoB;AAEtC3B,EAAAA,OAAO,EAAEY;AAF6B,CAAd,CAArB","sourcesContent":["import * as ActionTypes from './actionTypes';\nimport { DISHES } from '../shared/dishes';\nimport { actionTypes } from 'react-redux-form';\nimport {baseURL} from '../shared/baseURL';\nexport const addComment = (dishId, rating, author, comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n});\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch (baseURL + 'dishes')\n        .then(response => response.json())\n        .then (dishes => dispatch(addDishes(dishes)));\n}\n\nexport const dishesLoading = ()  => (dispatch) => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\nexport const fetchComments = () => (dispatch) => {\n    return fetch (baseURL + 'comments')\n        .then(response => response.json())\n        .then (comments => dispatch(addComments(comments)));\n}\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n\n    return fetch (baseURL + 'promos')\n        .then(response => response.json())\n        .then (promos => dispatch(addPromos(promos)));\n}\n\nexport const promosLoading = ()  => (dispatch) => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});"]},"metadata":{},"sourceType":"module"}