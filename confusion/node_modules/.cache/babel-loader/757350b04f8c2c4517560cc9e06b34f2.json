{"ast":null,"code":"import * as ActionTypes from './actionTypes';\nimport { DISHES } from '../shared/dishes';\nimport { actionTypes } from 'react-redux-form';\nimport { baseURL } from '../shared/baseURL';\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }\n});\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  return fetch(baseURL + 'dishees').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ':' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => dispatch(dishesFailed(error.message)));\n};\nexport const dishesLoading = () => dispatch => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseURL + 'comments').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ':' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading(true));\n  return fetch(baseURL + 'promotions').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ':' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(promos => dispatch(addPromos(promos))).catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => dispatch => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});","map":{"version":3,"sources":["/Users/ps44889/Desktop/react-tutorial/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","DISHES","actionTypes","baseURL","addComment","dishId","rating","author","comment","type","ADD_COMMENT","payload","fetchDishes","dispatch","dishesLoading","fetch","then","response","ok","error","Error","status","statusText","errmess","message","json","dishes","addDishes","catch","dishesFailed","DISHES_LOADING","DISHES_FAILED","commentsFailed","COMMENTS_FAILED","ADD_DISHES","addComments","comments","ADD_COMMENTS","fetchComments","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './actionTypes';\nimport { DISHES } from '../shared/dishes';\nimport { actionTypes } from 'react-redux-form';\nimport {baseURL} from '../shared/baseURL';\nexport const addComment = (dishId, rating, author, comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n});\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch (baseURL + 'dishees')\n        .then(response =>{\n            if(response.ok){\n                return response;\n            }\n            else {\n                var error=new Error('Error ' + response.status + ':' + response.statusText);\n                error.response=response;\n                throw error;\n                \n            }\n        },\n        error => {\n            var errmess = new Error(error.message)\n            throw errmess;\n   \n        })\n        .then(response => response.json())\n        .then (dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)))\n}\n\nexport const dishesLoading = ()  => (dispatch) => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\nexport const fetchComments = () => (dispatch) => {\n    return fetch (baseURL + 'comments')\n    .then(response =>{\n        if(response.ok){\n            return response;\n        }\n        else {\n            var error=new Error('Error ' + response.status + ':' + response.statusText);\n            error.response=response;\n            throw error;\n            \n        }\n    },\n    error => {\n        var errmess = new Error(error.message)\n        throw errmess;\n\n    })\n        .then (comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n\n    return fetch (baseURL + 'promotions')\n    .then(response =>{\n        if(response.ok){\n            return response;\n        }\n        else {\n            var error=new Error('Error ' + response.status + ':' + response.statusText);\n            error.response=response;\n            throw error;\n            \n        }\n    },\n    error => {\n        var errmess = new Error(error.message)\n        throw errmess;\n\n    })\n        .then (promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = ()  => (dispatch) => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});"]},"metadata":{},"sourceType":"module"}