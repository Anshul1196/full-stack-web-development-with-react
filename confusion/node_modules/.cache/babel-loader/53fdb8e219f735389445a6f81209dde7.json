{"ast":null,"code":"var _jsxFileName = \"/Users/ps44889/Desktop/react-tutorial/confusion/src/components/CommentFormComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem, Button, Label, Input, Col, Row, Modal, ModalHeader, ModalBody, FormGroup, Form } from \"reactstrap\";\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n    this.toggleModal();\n    this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    console.log(\"Current State is:\" + JSON.stringify(values)); //alert(\"Current State is:\"+JSON.stringify(values));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"Submit Comment\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      isOpen: this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"Submit your Comments\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-12 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmit(values),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlfor: \"rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, \" Rating \"), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Control.select, {\n      model: \".rating\",\n      id: \"rating\",\n      className: \"form-control  text-center\",\n      name: \"rating\",\n      placeholder: \"Rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 35\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 35\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 35\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 35\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 35\n      }\n    }, \"5\")))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlfor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, \" Your Name \"), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".author\",\n      id: \"author\",\n      className: \"form-control\",\n      name: \"name\",\n      placeholder: \"name\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".author\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: \"Must be greater than 2 characters\",\n        maxLength: \"Must be 15 characters or less\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 28\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlfor: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, \" Comment \"), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Control.textarea, {\n      model: \".comment\",\n      id: \"comment\",\n      className: \"form-control\",\n      name: \"comment\",\n      placeholder: \"comment\",\n      rows: \"6\",\n      validators: {\n        required\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".comment\",\n      show: \"touched\",\n      messages: {\n        required: 'Required'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 28\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      value: \"submit\",\n      color: \"primary\",\n      className: \"bg-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, \"Submit\"))))));\n  }\n\n}\n\nexport default CommentForm;","map":{"version":3,"sources":["/Users/ps44889/Desktop/react-tutorial/confusion/src/components/CommentFormComponent.js"],"names":["React","Component","Card","CardImg","CardImgOverlay","CardTitle","Breadcrumb","BreadcrumbItem","Button","Label","Input","Col","Row","Modal","ModalHeader","ModalBody","FormGroup","Form","Control","LocalForm","Errors","required","val","length","maxLength","len","minLength","CommentForm","constructor","props","state","isModalOpen","toggleModal","bind","handleSubmit","setState","values","postComment","dishId","rating","author","comment","console","log","JSON","stringify","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle,Breadcrumb,BreadcrumbItem,Button,Label,Input,Col,Row,Modal,ModalHeader,ModalBody,FormGroup,Form} from \"reactstrap\";\nimport { Control,LocalForm,Errors } from 'react-redux-form';\nconst required= (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nclass CommentForm extends Component{\n    constructor(props){\n\n        super(props);\n        this.state={          \n            isModalOpen :false\n        };       \n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit=this.handleSubmit.bind(this);\n    }\n \n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        })\n    }\n    handleSubmit(values){\n        this.toggleModal()\n        this.props.postComment(this.props.dishId,values.rating,values.author,values.comment)\n        console.log(\"Current State is:\"+JSON.stringify(values));\n        //alert(\"Current State is:\"+JSON.stringify(values));\n    }\n   \n    render(){\n        return (\n            <React.Fragment>\n            <Button type=\"submit\" color=\"primary\" onClick={this.toggleModal}>\n            Submit Comment\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                <ModalHeader isOpen={this.state.isModalOpen} toggle={this.toggleModal}>Submit your Comments</ModalHeader>\n                <ModalBody>\n                <div className='col-12 col-md-12 text-center'>\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                            <Label htmlfor=\"rating\"> Rating </Label>\n                            <Col md={12}>\n                            <Control.select model=\".rating\" id=\"rating\" className=\"form-control  text-center\" name=\"rating\" placeholder=\"Rating\"\n                              >\n                                  <option>1</option>\n                                  <option>2</option>\n                                  <option>3</option>\n                                  <option>4</option>\n                                  <option>5</option>\n                                  </Control.select>  \n                              \n                           \n                         \n                            </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                            <Label htmlfor=\"name\"> Your Name </Label>\n                            <Col md={12}>\n                            <Control.text model=\".author\" id=\"author\" className=\"form-control\" name=\"name\" placeholder=\"name\"\n                              validators={{\n                                  required,minLength:minLength(3),maxLength:maxLength(15)\n                              }}    />\n                           <Errors className=\"text-danger\"\n                           model=\".author\" show=\"touched\"\n                           messages={{\n                               required: 'Required',\n                               minLength:\"Must be greater than 2 characters\",\n                               maxLength:\"Must be 15 characters or less\"\n                           }}\n                           />\n                            </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                            <Label htmlfor=\"comment\"> Comment </Label>\n                            <Col md={12} >\n                            <Control.textarea model=\".comment\" id=\"comment\" className=\"form-control\" name=\"comment\" placeholder=\"comment\" rows=\"6\"\n                              validators={{\n                                  required\n                              }}    />\n                           <Errors className=\"text-danger\"\n                           model=\".comment\" show=\"touched\"\n                           messages={{\n                               required: 'Required',\n\n                           }}\n                           />\n                            </Col>\n                            </Row>\n\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\" className=\"bg-primary\">Submit</Button>\n                    \n                            </LocalForm>\n                            </div>\n                </ModalBody>\n            </Modal>\n        </React.Fragment>\n);\n}\n\n\n\n\n\n\n}\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}